# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import chat_pb2 as chat__pb2

GRPC_GENERATED_VERSION = '1.70.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in chat_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ChatServiceStub(object):
    """--- Service Definition ---

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CheckUsername = channel.unary_unary(
                '/chat.ChatService/CheckUsername',
                request_serializer=chat__pb2.CheckUsernameRequest.SerializeToString,
                response_deserializer=chat__pb2.CheckUsernameResponse.FromString,
                _registered_method=True)
        self.CheckPassword = channel.unary_unary(
                '/chat.ChatService/CheckPassword',
                request_serializer=chat__pb2.CheckPasswordRequest.SerializeToString,
                response_deserializer=chat__pb2.CheckPasswordResponse.FromString,
                _registered_method=True)
        self.CreateUser = channel.unary_unary(
                '/chat.ChatService/CreateUser',
                request_serializer=chat__pb2.CreateUserRequest.SerializeToString,
                response_deserializer=chat__pb2.CreateUserResponse.FromString,
                _registered_method=True)
        self.ConfirmLogin = channel.unary_unary(
                '/chat.ChatService/ConfirmLogin',
                request_serializer=chat__pb2.ConfirmLoginRequest.SerializeToString,
                response_deserializer=chat__pb2.ConfirmLoginResponse.FromString,
                _registered_method=True)
        self.ConfirmLogout = channel.unary_unary(
                '/chat.ChatService/ConfirmLogout',
                request_serializer=chat__pb2.ConfirmLogoutRequest.SerializeToString,
                response_deserializer=chat__pb2.ConfirmLogoutResponse.FromString,
                _registered_method=True)
        self.GetOnlineUsers = channel.unary_unary(
                '/chat.ChatService/GetOnlineUsers',
                request_serializer=chat__pb2.GetOnlineUsersRequest.SerializeToString,
                response_deserializer=chat__pb2.GetOnlineUsersResponse.FromString,
                _registered_method=True)
        self.GetUsers = channel.unary_unary(
                '/chat.ChatService/GetUsers',
                request_serializer=chat__pb2.GetUsersRequest.SerializeToString,
                response_deserializer=chat__pb2.GetUsersResponse.FromString,
                _registered_method=True)
        self.SendMessage = channel.unary_unary(
                '/chat.ChatService/SendMessage',
                request_serializer=chat__pb2.SendMessageRequest.SerializeToString,
                response_deserializer=chat__pb2.SendMessageResponse.FromString,
                _registered_method=True)
        self.GetMessage = channel.unary_unary(
                '/chat.ChatService/GetMessage',
                request_serializer=chat__pb2.GetMessageRequest.SerializeToString,
                response_deserializer=chat__pb2.GetMessageResponse.FromString,
                _registered_method=True)
        self.ConfirmRead = channel.unary_unary(
                '/chat.ChatService/ConfirmRead',
                request_serializer=chat__pb2.ConfirmReadRequest.SerializeToString,
                response_deserializer=chat__pb2.ConfirmReadResponse.FromString,
                _registered_method=True)
        self.DeleteMessage = channel.unary_unary(
                '/chat.ChatService/DeleteMessage',
                request_serializer=chat__pb2.DeleteMessageRequest.SerializeToString,
                response_deserializer=chat__pb2.DeleteMessageResponse.FromString,
                _registered_method=True)
        self.DeleteUser = channel.unary_unary(
                '/chat.ChatService/DeleteUser',
                request_serializer=chat__pb2.DeleteUserRequest.SerializeToString,
                response_deserializer=chat__pb2.DeleteUserResponse.FromString,
                _registered_method=True)


class ChatServiceServicer(object):
    """--- Service Definition ---

    """

    def CheckUsername(self, request, context):
        """User account management.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckPassword(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfirmLogin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfirmLogout(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOnlineUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendMessage(self, request, context):
        """Messaging.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfirmRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChatServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CheckUsername': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckUsername,
                    request_deserializer=chat__pb2.CheckUsernameRequest.FromString,
                    response_serializer=chat__pb2.CheckUsernameResponse.SerializeToString,
            ),
            'CheckPassword': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckPassword,
                    request_deserializer=chat__pb2.CheckPasswordRequest.FromString,
                    response_serializer=chat__pb2.CheckPasswordResponse.SerializeToString,
            ),
            'CreateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUser,
                    request_deserializer=chat__pb2.CreateUserRequest.FromString,
                    response_serializer=chat__pb2.CreateUserResponse.SerializeToString,
            ),
            'ConfirmLogin': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfirmLogin,
                    request_deserializer=chat__pb2.ConfirmLoginRequest.FromString,
                    response_serializer=chat__pb2.ConfirmLoginResponse.SerializeToString,
            ),
            'ConfirmLogout': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfirmLogout,
                    request_deserializer=chat__pb2.ConfirmLogoutRequest.FromString,
                    response_serializer=chat__pb2.ConfirmLogoutResponse.SerializeToString,
            ),
            'GetOnlineUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOnlineUsers,
                    request_deserializer=chat__pb2.GetOnlineUsersRequest.FromString,
                    response_serializer=chat__pb2.GetOnlineUsersResponse.SerializeToString,
            ),
            'GetUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUsers,
                    request_deserializer=chat__pb2.GetUsersRequest.FromString,
                    response_serializer=chat__pb2.GetUsersResponse.SerializeToString,
            ),
            'SendMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.SendMessage,
                    request_deserializer=chat__pb2.SendMessageRequest.FromString,
                    response_serializer=chat__pb2.SendMessageResponse.SerializeToString,
            ),
            'GetMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMessage,
                    request_deserializer=chat__pb2.GetMessageRequest.FromString,
                    response_serializer=chat__pb2.GetMessageResponse.SerializeToString,
            ),
            'ConfirmRead': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfirmRead,
                    request_deserializer=chat__pb2.ConfirmReadRequest.FromString,
                    response_serializer=chat__pb2.ConfirmReadResponse.SerializeToString,
            ),
            'DeleteMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteMessage,
                    request_deserializer=chat__pb2.DeleteMessageRequest.FromString,
                    response_serializer=chat__pb2.DeleteMessageResponse.SerializeToString,
            ),
            'DeleteUser': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUser,
                    request_deserializer=chat__pb2.DeleteUserRequest.FromString,
                    response_serializer=chat__pb2.DeleteUserResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'chat.ChatService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('chat.ChatService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ChatService(object):
    """--- Service Definition ---

    """

    @staticmethod
    def CheckUsername(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/CheckUsername',
            chat__pb2.CheckUsernameRequest.SerializeToString,
            chat__pb2.CheckUsernameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CheckPassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/CheckPassword',
            chat__pb2.CheckPasswordRequest.SerializeToString,
            chat__pb2.CheckPasswordResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/CreateUser',
            chat__pb2.CreateUserRequest.SerializeToString,
            chat__pb2.CreateUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConfirmLogin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/ConfirmLogin',
            chat__pb2.ConfirmLoginRequest.SerializeToString,
            chat__pb2.ConfirmLoginResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConfirmLogout(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/ConfirmLogout',
            chat__pb2.ConfirmLogoutRequest.SerializeToString,
            chat__pb2.ConfirmLogoutResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetOnlineUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/GetOnlineUsers',
            chat__pb2.GetOnlineUsersRequest.SerializeToString,
            chat__pb2.GetOnlineUsersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/GetUsers',
            chat__pb2.GetUsersRequest.SerializeToString,
            chat__pb2.GetUsersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/SendMessage',
            chat__pb2.SendMessageRequest.SerializeToString,
            chat__pb2.SendMessageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/GetMessage',
            chat__pb2.GetMessageRequest.SerializeToString,
            chat__pb2.GetMessageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConfirmRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/ConfirmRead',
            chat__pb2.ConfirmReadRequest.SerializeToString,
            chat__pb2.ConfirmReadResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/DeleteMessage',
            chat__pb2.DeleteMessageRequest.SerializeToString,
            chat__pb2.DeleteMessageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/DeleteUser',
            chat__pb2.DeleteUserRequest.SerializeToString,
            chat__pb2.DeleteUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
